Creating React APP:
  npx create-react-app todo-app

Setting-UP Firebase:
  Go to firebase console with gmail email account
  https://console.firebase.google.com/u/0/
  
  Step 1:
    Add Project
    Give Project name: for e.g => todo-app
    We can enable google analytics for firebase project
    We can create new google analytic account or choose default
    Create Project
    Then click on continue
    You will end-ip on firebase page
  
  Step 2:
    Look at top-left corner project overview and click little settings icon
    Look at bottom for your apps, you will see there are no apps in your project
    next clik </> web dev icon
    give you app a nick name maybe => todo-app
    click also set Firebase hosting => this will help us in deployment
      Now we are going to see Add Firebase SDK this is how we include firebase code into our project
      We can ignore this for React use Node modules insteads
    Click next:
    This  is important step, copy command to install firebase globally to ypur computer
    by copying pasitng command to your terminal
      => npm install -g firebase-tools
      Whenever we are doing install -g it means we are inistalling it globally means around
      entire computer it doesen' matter if we are inside this project or that project. We are
      always going to have access to firebase tools.
    Click next:      
  
  Step 3:
    Copy paste firebase login command to your terminal
    Allow Firebase to collect CLI usage and error reporting information? (Y/n) : say y 
    Window will open please choose your account
    and then allow once its asked
    Click continue to console
  
  Step 4: 
    Scroll down on oyur console and find Firebase SDK snippet
    There click config and the object you see is important to connect to your firebase backend
    We can use it later.

  
const [todos, setTodos] = useState([]); 
  we are using state its temporary memory, useState is react hook we need to import it
  from react to use it, useState([]); in this line we are telling intial state is an empty array

  In next step temporarily adding todo list to state and going to retereive it state
  using es6 map function. 
  { todos.map(todo) => (

  )} // () In these brackets we can return some html

Installing npm install @material-ui/core
  Frontend framework for UI design

Component is scomething we write once and use several times on several places, we can reuse that Component
Props stands for properties which allow is to diffrentiate one component from other

Copy Firebase config mentioned in step 4n
  npm install firebase
  create a new file in src folder call it firebase.js and copy config in it

  Creating database on google firebase  
    Step 1:
      click Firestore Database
      click Create database
      click start in test mode
      click next
      select region closest to you for me eur3(europe-west)
      clcik enable
    
    Step 2:
      click start collection call it todos
      Document ID clcik Auto-ID
      Field add Dield name for e.g. todo
      Value add todo task input value

    Step 3:
      To host site unsing google firebase
      type in terminal firebase intial
      select yes
      Hosting: Configure files for Firebase Hosting and (optionally) set up GitHub Action deploys
      Select use exisiting project
      Select todo app
      What do you want to use as your public directory? build
      Configure as a single-page app (rewrite all urls to /index.html)? (y/N) yes

      run follwoing commands:
        npm run build to build react app for production
        nd then firebase deploy

  


